services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    image: ghcr.io/chbornman/lancaster-local-backend:main
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      GOOGLE_TRANSLATE_API_KEY: ${GOOGLE_TRANSLATE_API_KEY}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE}
      SUPPORTED_LANGUAGES: ${SUPPORTED_LANGUAGES}
      RTL_LANGUAGES: ${RTL_LANGUAGES}
      PORT: 3000
    ports:
      - "3010:3000"
    networks:
      - internal
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    image: ghcr.io/chbornman/lancaster-local-frontend:main
    ports:
      - "3011:80"
    networks:
      - internal
    restart: unless-stopped

  # Migration service - runs once to setup database
  migrate:
    image: ghcr.io/chbornman/lancaster-local-backend:main
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    networks:
      - internal
    depends_on:
      db:
        condition: service_healthy
    command: ["/app/migrate"]
    restart: "no"

  # Seed service - for initial setup only, run manually with:
  # docker compose -f docker-compose.prod.yml run --rm seed
  seed:
    image: ghcr.io/chbornman/lancaster-local-backend:main
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
      GOOGLE_TRANSLATE_API_KEY: ${GOOGLE_TRANSLATE_API_KEY}
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE}
      SUPPORTED_LANGUAGES: ${SUPPORTED_LANGUAGES}
      RTL_LANGUAGES: ${RTL_LANGUAGES}
    networks:
      - internal
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: "/app/seed"
    restart: "no"

volumes:
  postgres_data:

networks:
  internal:
    driver: bridge