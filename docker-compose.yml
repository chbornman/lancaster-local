services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: lancaster_user
      POSTGRES_PASSWORD: lancaster_pass
      POSTGRES_DB: lancaster_local_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lancaster_user -d lancaster_local_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Migration service - runs once to setup database
  migrate:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: postgresql://lancaster_user:lancaster_pass@db:5432/lancaster_local_db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: cargo run --bin migrate
    restart: "no"

  # Seed service - runs once to populate initial data
  seed:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: postgresql://lancaster_user:lancaster_pass@db:5432/lancaster_local_db
      REDIS_URL: redis://redis:6379
      GOOGLE_TRANSLATE_API_KEY: ${GOOGLE_TRANSLATE_API_KEY}
      DEFAULT_LANGUAGE: en
      SUPPORTED_LANGUAGES: en,es,de,fr,zh,ar,he,fa,ur
      RTL_LANGUAGES: ar,he,fa,ur
    depends_on:
      migrate:
        condition: service_completed_successfully
    volumes:
      - ./backend:/app
    command: cargo run --bin seed
    restart: "no"

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: postgresql://lancaster_user:lancaster_pass@db:5432/lancaster_local_db
      REDIS_URL: redis://redis:6379
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      GOOGLE_TRANSLATE_API_KEY: ${GOOGLE_TRANSLATE_API_KEY}
      DEFAULT_LANGUAGE: en
      SUPPORTED_LANGUAGES: en,es,de,fr,zh,ar,he,fa,ur
      RTL_LANGUAGES: ar,he,fa,ur
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      seed:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: cargo watch -x run

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      VITE_API_URL: http://localhost:3000/api
      VITE_DEFAULT_LANGUAGE: en
      VITE_RTL_LANGUAGES: ar,he,fa,ur
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0


volumes:
  postgres_data: