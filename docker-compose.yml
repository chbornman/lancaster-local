services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: lancaster
      POSTGRES_PASSWORD: lancaster_pass
      POSTGRES_DB: lancaster_community
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lancaster -d lancaster_community"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: postgresql://lancaster:lancaster_pass@db:5432/lancaster_community
      REDIS_URL: redis://redis:6379
      ADMIN_PASSWORD: secure_admin_password_2024
      GOOGLE_TRANSLATE_API_KEY: ${GOOGLE_TRANSLATE_API_KEY}
      DEFAULT_LANGUAGE: en
      SUPPORTED_LANGUAGES: en,es,de,fr,zh,ar,he,fa,ur
      RTL_LANGUAGES: ar,he,fa,ur
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: cargo watch -x run

  frontend:
    build: ./frontend
    environment:
      VITE_API_URL: http://localhost:3000/api
      VITE_DEFAULT_LANGUAGE: en
      VITE_RTL_LANGUAGES: ar,he,fa,ur
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data: